plugins {
    id "idea"

    id "checkstyle"
    id "findbugs"
    id "pmd"

    id "jacoco"
    id "io.github.ddimtirov.codacy" version "0.1.0"

    id "org.jetbrains.intellij" version "0.2.17"
}

apply from: "integration.gradle"

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile group: "com.google.code.findbugs", name: "jsr305", version: findbugsVersion
    compile group: "com.google.code.findbugs", name: "annotations", version: findbugsVersion

    testCompile group: "junit", name: "junit", version: junitVersion
    testCompile group: "nl.jqno.equalsverifier", name: "equalsverifier", version: equalsVerifierVersion
    testCompile group: "org.assertj", name: "assertj-core", version: assertjVersion
    testCompile group: "org.assertj", name: "assertj-swing-junit", version: assertjSwingVersion
    testCompile group: "org.mockito", name: "mockito-core", version: mockitoVersion
}

configurations {
    codacy
}

sourceSets {
    // Change the output directory for the main source set back to the old path
    main.output.classesDir = new File(buildDir, "classes/main")
    test.output.classesDir = new File(buildDir, "classes/test")
}


intellij {
    version = intellijVersion
    updateSinceUntilBuild = false
}

checkstyle {
    ignoreFailures = true
}

findbugs {
    ignoreFailures = true
    includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
}

pmd {
    ignoreFailures = true
    ruleSetFiles = files("$rootProject.projectDir/config/pmd/main-pmd-rules.xml")
}

pmdTest {
    ruleSetFiles = files("$rootProject.projectDir/config/pmd/test-pmd-rules.xml")
}

jacocoTestReport {
    reports {
        csv.enabled = false
        html.enabled = true
        xml.enabled = true
    }
}
