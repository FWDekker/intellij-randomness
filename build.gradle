plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"

    id "org.jetbrains.dokka" version "0.9.17"

    id "jacoco"
    id "io.github.ddimtirov.codacy" version "0.1.0"

    id "org.jetbrains.intellij" version "0.4.1"
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8"
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect"

    testCompile group: "nl.jqno.equalsverifier", name: "equalsverifier", version: equalsVerifierVersion
    testCompile group: "org.assertj", name: "assertj-core", version: assertjVersion
    testCompile group: "org.assertj", name: "assertj-swing-junit", version: assertjSwingVersion
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-api", version: junitVersion
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitVersion
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-params", version: junitVersion
    testCompile group: "org.junit.vintage", name: "junit-vintage-engine", version: junitVersion
    testCompile group: "org.mockito", name: "mockito-core", version: mockitoVersion

    testImplementation group: "org.spekframework.spek2", name: "spek-dsl-jvm", version: spekVersion
    testRuntimeOnly group: "org.spekframework.spek2", name: "spek-runner-junit5", version: spekVersion
}

configurations {
    codacy
}


test {
    useJUnitPlatform {
        includeEngines "junit-vintage", "junit-jupiter", "spek2"
    }
}

dokka {
    outputFormat = "html"
    includes = ["packages.md"]

    includeNonPublic = false
    skipDeprecated = false
    reportUndocumented = true
    skipEmptyPackages = true
}

intellij {
    version = intellijVersion
    updateSinceUntilBuild = false
}

jacocoTestReport {
    executionData file("$buildDir/jacoco/test.exec")

    reports {
        csv.enabled = false
        html.enabled = true
        xml.enabled = true
    }
}
