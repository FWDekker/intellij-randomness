comments:
    # License in each file is unnecessary.
    AbsentOrWrongFileLicense:
        active: false
    # Nothing wrong with documenting private methods.
    CommentOverPrivateFunction:
        active: false
    # Nothing wrong with documenting private properties.
    CommentOverPrivateProperty:
        active: false

complexity:
    # Acceptable if used sparingly.
    LabeledExpression:
      active: false
    # Solved using resource bundles. All remaining duplicates are resource identifiers.
    StringLiteralDuplication:
      active: false

formatting:
    # Experimental. Too many false positives.
    ArgumentListWrapping:
        active: false
    # Placing expression functions on one line makes it harder to understand.
    FunctionSignature:
        active: false
    # That's part of my code style.
    NoConsecutiveBlankLines:
        active: false
    # Acceptable because of auto-formatting.
    MultiLineIfElse:
        active: false
    # Only if function takes vararg.
    TrailingCommaOnCallSite:
        active: false

naming:
    # Too many false positives in JUnit 4 tests.
    FunctionMaxLength:
        active: false

style:
    # `apply` is confusing with namespaces.
    AlsoCouldBeApply:
        active: false
    # Those functions are added as conscious design decisions.
    DataClassContainsFunctions:
        active: false
    # Not if they're settings objects.
    DataClassShouldBeImmutable:
        active: false
    # Acceptable in parameterized tests.
    DestructuringDeclarationWithTooManyEntries:
        active: false
    # Comments indicating TODOs are acceptable.
    ForbiddenComment:
        active: false
    # One more is fine in my opinion.
    LoopWithTooManyJumpStatements:
        maxJumpCount: 2
    # No braces are easier to read.
    MandatoryBracesIfStatements:
        active: false
    # Three is fine.
    ReturnCount:
        max: 3
    # False positives when there are two newlines after the imports.
    SpacingBetweenPackageAndImports:
        active: false
