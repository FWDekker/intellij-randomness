<?xml version="1.0"?>

<ruleset name="PMD Global Code Style Rules">
    <description>Selection of rules from the Code Style category that should apply to all code.</description>

    <!-- No default constructor is OK.
    <rule ref="category/java/codestyle.xml/AtLeastOneConstructor"/> -->
    <rule ref="category/java/codestyle.xml/AvoidDollarSigns"/>
    <rule ref="category/java/codestyle.xml/AvoidFinalLocalVariable"/>
    <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass"/>
    <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
    <rule ref="category/java/codestyle.xml/AvoidUsingNativeCode"/>
    <rule ref="category/java/codestyle.xml/BooleanGetMethodName"/>
    <rule ref="category/java/codestyle.xml/CallSuperInConstructor"/> <!-- TODO check if this is wanted -->
    <rule ref="category/java/codestyle.xml/ClassNamingConventions"/>
    <!-- Production code only. Default package is standard for JUnit tests.
    <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier"/> -->
    <rule ref="category/java/codestyle.xml/ConfusingTernary"/>
    <rule ref="category/java/codestyle.xml/ControlStatementBraces"/>
    <!-- Production code only. Default package is standard for JUnit tests.
    <rule ref="category/java/codestyle.xml/DefaultPackage"/> -->
    <rule ref="category/java/codestyle.xml/DontImportJavaLang"/>
    <rule ref="category/java/codestyle.xml/DuplicateImports"/>
    <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
    <rule ref="category/java/codestyle.xml/ExtendsObject"/>
    <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
    <rule ref="category/java/codestyle.xml/FieldNamingConventions"/>
    <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
    <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions"/>
    <rule ref="category/java/codestyle.xml/GenericsNaming"/>
    <rule ref="category/java/codestyle.xml/IdenticalCatchBranches"/>
    <rule ref="category/java/codestyle.xml/LinguisticNaming"/>
    <!-- Project does not use EJB.
    <rule ref="category/java/codestyle.xml/LocalHomeNamingConvention"/>
    <rule ref="category/java/codestyle.xml/LocalInterfaceSessionNamingConvention"/> -->
    <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal"/>
    <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions"/>
    <rule ref="category/java/codestyle.xml/LongVariable">
        <properties>
            <!-- Longer variable names are OK. -->
            <property name="minimum" value="36"/>
        </properties>
    </rule>
    <!-- Project does not use EJB.
    <rule ref="category/java/codestyle.xml/MDBAndSessionBeanNamingConvention"/> -->
    <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal"/>
    <rule ref="category/java/codestyle.xml/MethodNamingConventions"/>
    <rule ref="category/java/codestyle.xml/NoPackage"/>
    <!-- Multiple returns in a method are OK.
    <rule ref="category/java/codestyle.xml/OnlyOneReturn"/> -->
    <rule ref="category/java/codestyle.xml/PackageCase"/>
    <rule ref="category/java/codestyle.xml/PrematureDeclaration"/>
    <!-- Project does not use EJB.
    <rule ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention"/>
    <rule ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention"/> -->
    <rule ref="category/java/codestyle.xml/ShortClassName"/>
    <rule ref="category/java/codestyle.xml/ShortMethodName"/>
    <rule ref="category/java/codestyle.xml/ShortVariable"/>
    <!-- Production code only. Static imports make tests easier to read.
    <rule ref="category/java/codestyle.xml/TooManyStaticImports"/> -->
    <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement"/>
    <rule ref="category/java/codestyle.xml/UnnecessaryConstructor"/>
    <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
    <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"/>
    <rule ref="category/java/codestyle.xml/UnnecessaryModifier"/>
    <rule ref="category/java/codestyle.xml/UnnecessaryReturn"/>
    <rule ref="category/java/codestyle.xml/UseDiamondOperator"/>
    <rule ref="category/java/codestyle.xml/UselessParentheses"/>
    <rule ref="category/java/codestyle.xml/UselessQualifiedThis"/>
    <rule ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals">
        <properties>
            <!-- Sub-million can be eyeballed. -->
            <property name="acceptableDecimalLength" value="7"/>
        </properties>
    </rule>
</ruleset>
